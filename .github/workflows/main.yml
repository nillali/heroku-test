name: Test before deploy

on:
  push:
    branches: ["main"]

jobs:
  component-test:
    runs-on: ubuntu-latest
    env:
      dbURI: ${{secrets.TEST_DB}}
      ACCESS_TOKEN_SECRET: ${{secrets.ACCESS_TOKEN_SECRET}}
      REFRESH_TOKEN_SECRET: ${{secrets.REFRESH_TOKEN_SECRET}}

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npm run componenttest
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "heroku-test-group" #Must be unique in Heroku
          heroku_email: "anna.toll@protonmail.com"

  integration-test:
    needs: component-test

    runs-on: ubuntu-latest
    env:
      dbURI: ${{secrets.DB}}
      ACCESS_TOKEN_SECRET: ${{secrets.ACCESS_TOKEN_SECRET}}
      REFRESH_TOKEN_SECRET: ${{secrets.REFRESH_TOKEN_SECRET}}

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm ci
      - run: npm run integrationstest
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "one-source-integration-server" #Must be unique in Heroku
          heroku_email: "anna.toll@protonmail.com"
